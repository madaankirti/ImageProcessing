import cv2
import numpy as np
def solution(image_path):
    image=cv2.imread(image_path)
    pad_size = 50
    height, width, channels = image.shape
    img = cv2.copyMakeBorder(image, pad_size, pad_size, pad_size, pad_size, cv2.BORDER_CONSTANT, value=[255, 255, 255])
    gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
    gray=cv2.bitwise_not(gray)
    cv2_imshow(gray)
    thresh_img=cv2.threshold(gray,0,255,cv2.THRESH_BINARY +cv2.THRESH_OTSU)[1]
    cv2_imshow(thresh_img)
    coordinates=np.column_stack(np.where(thresh_img>0))
    angle=cv2.minAreaRect(coordinates)[-1]
    if(angle>45):
      angle=-angle+90
    elif(angle==0):
      angle=angle
    else:
      angle=-angle-180
    print(angle) 
    height,width=img.shape[:2]
    center=(width//2,height//2)
    rotationMatrix=cv2.getRotationMatrix2D(center,angle,1.0)
    rotated_img=cv2.warpAffine(img,rotationMatrix,(width,height),flags=cv2.INTER_CUBIC,borderMode=cv2.BORDER_REFLECT)
    return rotated_img
